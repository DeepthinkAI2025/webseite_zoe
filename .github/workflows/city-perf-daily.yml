name: City Performance Daily

on:
  schedule:
    - cron: "15 4 * * *"  # Täglich 04:15 UTC (≈06:15 CET/07:15 CEST)
  workflow_dispatch:

permissions:
  contents: write
  # Hinweis: Ergebnisse werden committed (JSON + Badge + Summary) wenn Änderungen vorliegen.

jobs:
  city-perf:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            next-app/package-lock.json

      - name: Install deps (root)
        run: |
          npm ci || npm install

      - name: Install deps (next-app)
        working-directory: next-app
        run: |
          npm ci || npm install

      - name: Build (optional for static paths)
        working-directory: next-app
        run: |
          npm run build || echo "Build optional für statische Lighthouse Messung"

      - name: Run city lighthouse snapshot
        working-directory: next-app
        run: |
          node scripts/seo/city-lighthouse.mjs --base https://example.com --out docs/city-perf.json --history docs/city-perf-history.json || echo "city-lighthouse fallback"

      - name: Ranking
        working-directory: next-app
        run: |
          # Composite Score aktiviert (Standardgewichte anpassbar über --wLcp/--wCls/--wTbt)
          node scripts/seo/city-perf-ranking.mjs --history docs/city-perf-history.json --out docs/city-perf-ranking.json --markdown --composite --wLcp 0.5 --wCls 0.2 --wTbt 0.3 || echo "ranking fallback"

      - name: Regression Detection
        working-directory: next-app
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CITY_PERF_WEBHOOK }}
        run: |
          node scripts/seo/city-perf-regression.mjs --history docs/city-perf-history.json --threshold 300 --out docs/city-perf-regressions.json --slack $SLACK_WEBHOOK_URL || echo "regression fallback"
      
      - name: Summary Step
        if: always()
        working-directory: next-app
        run: |
          echo "## City Performance Daily" >> $GITHUB_STEP_SUMMARY
          if [ -f docs/city-perf-ranking.json ]; then
            best=$(jq -r '.[0].city // empty' docs/city-perf-ranking.json 2>/dev/null || true)
            echo "Top City: ${best:-unbekannt}" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Summary Markdown
        working-directory: next-app
        run: |
          node scripts/seo/city-perf-summary.mjs --ranking docs/city-perf-ranking.json --regress docs/city-perf-regressions.json --out docs/city-perf-summary.md || echo "summary fallback"

      - name: Badge Generation
        working-directory: next-app
        run: |
          node scripts/seo/city-perf-badge.mjs --ranking docs/city-perf-ranking.json --out docs/city-perf-badge.json --metric composite --markdown || echo "badge fallback"

      - name: Update README Badge
        working-directory: next-app
        run: |
          node scripts/seo/update-city-badge.mjs --readme README.md --badge docs/city-perf-badge.json || echo "badge update skipped"

      - name: Commit results
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add next-app/docs/city-perf*.json next-app/docs/city-perf-summary.md next-app/docs/city-perf-badge.md next-app/README.md || true
          if ! git diff --cached --quiet; then
            git commit -m "chore(city-perf): daily snapshot & ranking" || true
            git push || true
          else
            echo "No city perf changes"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: city-perf-daily
          path: |
            next-app/docs/city-perf*.json
            next-app/docs/city-perf-summary.md
          if-no-files-found: ignore
